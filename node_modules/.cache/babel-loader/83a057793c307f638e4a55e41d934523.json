{"ast":null,"code":"var _jsxFileName = \"/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/src/componets/Mapa/index.jsx\";\nimport React from 'react';\nimport { GoogleMap, Marker, KmlLayer, TrafficLayer, useLoadScript } from '@react-google-maps/api'; //import { GoogleMap, Marker, InfoWindow, KmlLayer, TrafficLayer, DrawingManager, useLoadScript } from '@react-google-maps/api';\n\nimport { STYLE_CONTAI, MAPA_OPTION, MAPA_CENTER, KEY_GOOGLE } from \"./mapConfig\";\nimport { ICON_CFG } from \"./iconConfig\";\nimport Loading from '../Loading';\nimport Error500 from '../Errors/500';\n\nconst Index = props => {\n  const [map, setMap] = React.useState(null);\n  const [rutasKml, setRutasKml] = React.useState([]);\n  const {\n    moviles,\n    rutas\n  } = props;\n  const [markers, setMarkers] = React.useState({}); // const [ selected, setSelected ] = React.useState(null);\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    // googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n    googleMapsApiKey: KEY_GOOGLE\n  });\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n    setMarkers(moviles);\n    console.dir(markers);\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  const renderRutas = listado => {\n    listado.map((obj, i) => setRutasKml( /*#__PURE__*/React.createElement(KmlLayer, {\n      key: i,\n      url: obj,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 46\n      }\n    }), rutasKml));\n    return rutasKml;\n  };\n\n  const lasRutas = React.useEffect(rutas => {\n    rutas.map((obj, i) => setRutasKml( /*#__PURE__*/React.createElement(KmlLayer, {\n      key: i,\n      url: obj,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 44\n      }\n    }), rutasKml));\n  }, []);\n\n  const renderMarker = (cod, ppu, mov, pos, gra, spd, hor, fec) => {\n    const tittle = `MAQ: ${mov}|PPU: ${ppu}`;\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: cod,\n      title: tittle,\n      id: cod,\n      name: ppu,\n      position: pos,\n      mapCenter: pos,\n      draggable: false //onClick   = { this.onMarkerClick }\n      ,\n      icon: ICON_CFG(gra, spd) //label     = { ppu }\n      ,\n      hora: hor,\n      fecha: fec,\n      velocidad: spd,\n      grados: gra,\n      movil: mov,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    });\n  };\n\n  const crearMarker = obj => {\n    const {\n      Codigo,\n      Patente,\n      Movil\n    } = obj;\n    const eve = obj.Eventos[0];\n    const {\n      Heading,\n      Velocidad,\n      Fecha,\n      Hora\n    } = eve;\n    const pos = {\n      lat: eve.Latitud,\n      lng: eve.Longitud\n    };\n    const marker = renderMarker(Codigo, Patente, Movil, pos, Heading, Velocidad, Hora, Fecha);\n    return marker;\n  };\n\n  if (loadError) return /*#__PURE__*/React.createElement(Error500, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }\n  });\n  if (!isLoaded) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxMapa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: STYLE_CONTAI,\n    options: MAPA_OPTION,\n    onLoad: onMapLoad,\n    onUnmount: onUnmount,\n    zoom: 1,\n    center: MAPA_CENTER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, lasRutas(rutas), moviles.map(obj => obj.Eventos.length > 0 ? crearMarker(obj) : null), /*#__PURE__*/React.createElement(TrafficLayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default React.memo(Index);","map":{"version":3,"sources":["/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/src/componets/Mapa/index.jsx"],"names":["React","GoogleMap","Marker","KmlLayer","TrafficLayer","useLoadScript","STYLE_CONTAI","MAPA_OPTION","MAPA_CENTER","KEY_GOOGLE","ICON_CFG","Loading","Error500","Index","props","map","setMap","useState","rutasKml","setRutasKml","moviles","rutas","markers","setMarkers","isLoaded","loadError","googleMapsApiKey","mapRef","useRef","onMapLoad","useCallback","current","console","dir","panTo","lat","lng","setZoom","onUnmount","callback","renderRutas","listado","obj","i","lasRutas","useEffect","renderMarker","cod","ppu","mov","pos","gra","spd","hor","fec","tittle","crearMarker","Codigo","Patente","Movil","eve","Eventos","Heading","Velocidad","Fecha","Hora","Latitud","Longitud","marker","length","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { GoogleMap, Marker, KmlLayer, TrafficLayer, useLoadScript } from '@react-google-maps/api';\n//import { GoogleMap, Marker, InfoWindow, KmlLayer, TrafficLayer, DrawingManager, useLoadScript } from '@react-google-maps/api';\nimport { STYLE_CONTAI, MAPA_OPTION, MAPA_CENTER, KEY_GOOGLE } from \"./mapConfig\";\nimport { ICON_CFG } from \"./iconConfig\"\n\n\nimport Loading  from '../Loading';\nimport Error500 from '../Errors/500';\n\nconst Index = (props) => {\n    const [ map, setMap ] = React.useState(null);\n    const [ rutasKml, setRutasKml ] = React.useState([]);\n\n\n    const { moviles, rutas } = props;\n    const [ markers, setMarkers ] = React.useState({});\n    // const [ selected, setSelected ] = React.useState(null);\n\n    const { isLoaded, loadError } = useLoadScript({\n        // googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n        googleMapsApiKey: KEY_GOOGLE\n    });\n \n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n        setMarkers(moviles);\n        console.dir(markers);\n    }, []);\n\n    const panTo = React.useCallback(({ lat, lng }) => {\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(14);\n    }, []);\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n \n    \n    const renderRutas = (listado) => {\n        listado.map( (obj, i) => setRutasKml(<KmlLayer key={i} url={obj} />, rutasKml) );\n        return rutasKml;\n    }\n    const lasRutas = React.useEffect((rutas) => {\n        rutas.map( (obj, i) => setRutasKml(<KmlLayer key={i} url={obj} />, rutasKml) );\n      }, []);\n\n    const renderMarker = (cod, ppu, mov,  pos, gra, spd, hor, fec) => {\n        const tittle = `MAQ: ${mov}|PPU: ${ppu}`;\n        return (\n          <Marker  \n            key       = { cod } \n            title     = { tittle }\n            id        = { cod } \n            name      = { ppu }\n            position  = { pos } \n            mapCenter = { pos }\n            draggable = { false }\n            //onClick   = { this.onMarkerClick }\n            icon      = { ICON_CFG(gra, spd) }\n            //label     = { ppu }\n            hora      = { hor }\n            fecha     = { fec }\n            velocidad = { spd }\n            grados    = { gra }\n            movil     = { mov }\n          />\n        )\n    }\n\n    const crearMarker = (obj) => {\n        const { Codigo, Patente, Movil} = obj;\n        const eve = obj.Eventos[0];\n        const { Heading, Velocidad, Fecha, Hora } = eve;\n        const pos = { lat : eve.Latitud, lng: eve.Longitud };\n        const marker = renderMarker(Codigo, Patente, Movil, pos, Heading, Velocidad, Hora, Fecha);\n        return marker;\n    }\n\n    if (loadError) return <Error500 />;\n    if (!isLoaded) return <Loading />;\n\n    return (\n        <div className=\"boxMapa\">\n            <GoogleMap \n                mapContainerStyle={ STYLE_CONTAI } \n                options={ MAPA_OPTION }\n                onLoad={onMapLoad}\n                onUnmount={onUnmount} \n                zoom={1} \n                center={ MAPA_CENTER } \n            >\n                { lasRutas(rutas) }\n                { moviles.map(obj => (\n                    obj.Eventos.length > 0 ? crearMarker(obj): null)\n                )}\n                \n                <TrafficLayer />\n            </GoogleMap>\n        </div>\n    )\n}\n\nexport default React.memo(Index);"]},"metadata":{},"sourceType":"module"}