{"ast":null,"code":"import _slicedToArray from\"/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{GoogleMap,Marker,InfoWindow,KmlLayer,useLoadScript}from'@react-google-maps/api';import{STYLE_CONTAI,MAPA_OPTION,MAPA_CENTER,KEY_GOOGLE}from\"./mapConfig\";import Loading from'../Loading';import Error500 from'../Errors/500';var Index=function Index(props){var moviles=props.moviles,rutas=props.rutas;var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),map=_React$useState2[0],setMap=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),markers=_React$useState4[0],setMarkers=_React$useState4[1];var _React$useState5=React.useState(null),_React$useState6=_slicedToArray(_React$useState5,2),selected=_React$useState6[0],setSelected=_React$useState6[1];var _useLoadScript=useLoadScript({// googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\ngoogleMapsApiKey:KEY_GOOGLE}),isLoaded=_useLoadScript.isLoaded,loadError=_useLoadScript.loadError;var mapRef=React.useRef();var onMapLoad=React.useCallback(function(map){mapRef.current=map;},[]);var panTo=React.useCallback(function(_ref){var lat=_ref.lat,lng=_ref.lng;mapRef.current.panTo({lat:lat,lng:lng});mapRef.current.setZoom(14);},[]);var onUnmount=React.useCallback(function callback(map){setMap(null);},[]);var renderRutas=function renderRutas(listado){var kml=[];listado.map(function(obj,i){return kml.push(/*#__PURE__*/React.createElement(KmlLayer,{key:i,url:obj}));});return kml;};if(loadError)return/*#__PURE__*/React.createElement(Error500,null);if(!isLoaded)return/*#__PURE__*/React.createElement(Loading,null);return/*#__PURE__*/React.createElement(\"div\",{className:\"boxMapa\"},/*#__PURE__*/React.createElement(GoogleMap,{zoom:8,mapContainerStyle:STYLE_CONTAI,center:MAPA_CENTER,options:MAPA_OPTION,onLoad:onMapLoad,onUnmount:onUnmount},rutas.length>0?renderRutas(rutas):null));};export default React.memo(Index);","map":{"version":3,"sources":["/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/src/componets/Mapa/index.jsx"],"names":["React","GoogleMap","Marker","InfoWindow","KmlLayer","useLoadScript","STYLE_CONTAI","MAPA_OPTION","MAPA_CENTER","KEY_GOOGLE","Loading","Error500","Index","props","moviles","rutas","useState","map","setMap","markers","setMarkers","selected","setSelected","googleMapsApiKey","isLoaded","loadError","mapRef","useRef","onMapLoad","useCallback","current","panTo","lat","lng","setZoom","onUnmount","callback","renderRutas","listado","kml","obj","i","push","length","memo"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,UAA5B,CAAwCC,QAAxC,CAAkDC,aAAlD,KAAuE,wBAAvE,CACA,OAASC,YAAT,CAAuBC,WAAvB,CAAoCC,WAApC,CAAiDC,UAAjD,KAAmE,aAAnE,CAEA,MAAOC,CAAAA,OAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,eAArB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,IACbC,CAAAA,OADa,CACMD,KADN,CACbC,OADa,CACJC,KADI,CACMF,KADN,CACJE,KADI,qBAGCf,KAAK,CAACgB,QAAN,CAAe,IAAf,CAHD,oDAGdC,GAHc,qBAGTC,MAHS,0CAISlB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAJT,qDAIdG,OAJc,qBAILC,UAJK,0CAKWpB,KAAK,CAACgB,QAAN,CAAe,IAAf,CALX,qDAKdK,QALc,qBAKJC,WALI,wCAOWjB,aAAa,CAAC,CAC1C;AACAkB,gBAAgB,CAAEd,UAFwB,CAAD,CAPxB,CAObe,QAPa,gBAObA,QAPa,CAOHC,SAPG,gBAOHA,SAPG,CAYrB,GAAMC,CAAAA,MAAM,CAAG1B,KAAK,CAAC2B,MAAN,EAAf,CACA,GAAMC,CAAAA,SAAS,CAAG5B,KAAK,CAAC6B,WAAN,CAAkB,SAACZ,GAAD,CAAS,CACzCS,MAAM,CAACI,OAAP,CAAiBb,GAAjB,CACH,CAFiB,CAEf,EAFe,CAAlB,CAIA,GAAMc,CAAAA,KAAK,CAAG/B,KAAK,CAAC6B,WAAN,CAAkB,cAAkB,IAAfG,CAAAA,GAAe,MAAfA,GAAe,CAAVC,GAAU,MAAVA,GAAU,CAC9CP,MAAM,CAACI,OAAP,CAAeC,KAAf,CAAqB,CAAEC,GAAG,CAAHA,GAAF,CAAOC,GAAG,CAAHA,GAAP,CAArB,EACAP,MAAM,CAACI,OAAP,CAAeI,OAAf,CAAuB,EAAvB,EACH,CAHa,CAGX,EAHW,CAAd,CAKA,GAAMC,CAAAA,SAAS,CAAGnC,KAAK,CAAC6B,WAAN,CAAkB,QAASO,CAAAA,QAAT,CAAkBnB,GAAlB,CAAuB,CACvDC,MAAM,CAAC,IAAD,CAAN,CACH,CAFiB,CAEf,EAFe,CAAlB,CAKA,GAAMmB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAa,CAC7B,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACAD,OAAO,CAACrB,GAAR,CAAa,SAACuB,GAAD,CAAMC,CAAN,QAAYF,CAAAA,GAAG,CAACG,IAAJ,cAAS,oBAAC,QAAD,EAAU,GAAG,CAAED,CAAf,CAAkB,GAAG,CAAED,GAAvB,EAAT,CAAZ,EAAb,EACA,MAAOD,CAAAA,GAAP,CACH,CAJD,CAMA,GAAId,SAAJ,CAAe,mBAAO,oBAAC,QAAD,MAAP,CACf,GAAI,CAACD,QAAL,CAAe,mBAAO,oBAAC,OAAD,MAAP,CAEf,mBACI,2BAAK,SAAS,CAAC,SAAf,eACI,oBAAC,SAAD,EACI,IAAI,CAAE,CADV,CAEI,iBAAiB,CAAGlB,YAFxB,CAGI,MAAM,CAAGE,WAHb,CAII,OAAO,CAAGD,WAJd,CAKI,MAAM,CAAEqB,SALZ,CAMI,SAAS,CAAEO,SANf,EASEpB,KAAK,CAAC4B,MAAN,CAAe,CAAf,CAAmBN,WAAW,CAACtB,KAAD,CAA9B,CAAwC,IAT1C,CADJ,CADJ,CAeH,CAnDD,CAqDA,cAAef,CAAAA,KAAK,CAAC4C,IAAN,CAAWhC,KAAX,CAAf","sourcesContent":["import React from 'react';\nimport { GoogleMap, Marker, InfoWindow, KmlLayer, useLoadScript } from '@react-google-maps/api';\nimport { STYLE_CONTAI, MAPA_OPTION, MAPA_CENTER, KEY_GOOGLE } from \"./mapConfig\";\n\nimport Loading  from '../Loading';\nimport Error500 from '../Errors/500';\n\nconst Index = (props) => {\n    const { moviles, rutas } = props;\n\n    const [map, setMap] = React.useState(null);\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState(null);\n\n    const { isLoaded, loadError } = useLoadScript({\n        // googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n        googleMapsApiKey: KEY_GOOGLE\n    });\n \n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({ lat, lng }) => {\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(14);\n    }, []);\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n \n    \n    const renderRutas = (listado) => {\n        let kml = [];\n        listado.map( (obj, i) => kml.push(<KmlLayer key={i} url={obj} />) );\n        return kml;\n    }\n\n    if (loadError) return <Error500 />;\n    if (!isLoaded) return <Loading />;\n\n    return (\n        <div className=\"boxMapa\">\n            <GoogleMap \n                zoom={8} \n                mapContainerStyle={ STYLE_CONTAI } \n                center={ MAPA_CENTER } \n                options={ MAPA_OPTION }\n                onLoad={onMapLoad}\n                onUnmount={onUnmount} \n            >\n\n            { rutas.length > 0 ? renderRutas(rutas) : null }\n            </GoogleMap>\n        </div>\n    )\n}\n\nexport default React.memo(Index);"]},"metadata":{},"sourceType":"module"}