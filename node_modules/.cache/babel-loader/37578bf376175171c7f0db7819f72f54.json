{"ast":null,"code":"var _jsxFileName = \"/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/src/componets/Mapa/index.jsx\";\nimport React from 'react';\nimport { GoogleMap, Marker, InfoWindow, KmlLayer, useLoadScript } from '@react-google-maps/api';\nimport { STYLE_CONTAI, MAPA_OPTION, MAPA_CENTER, KEY_GOOGLE } from \"./mapConfig\";\nimport Loading from '../Loading';\nimport Error500 from '../Errors/500';\n\nconst Index = props => {\n  const {\n    moviles,\n    rutas\n  } = props;\n  const [map, setMap] = React.useState(null);\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    // googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n    googleMapsApiKey: KEY_GOOGLE\n  });\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  const renderRutas = listado => {\n    let kml = [];\n    listado.map((obj, i) => kml.push( /*#__PURE__*/React.createElement(KmlLayer, {\n      key: i,\n      url: obj,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 43\n      }\n    })));\n    return kml;\n  };\n\n  if (loadError) return /*#__PURE__*/React.createElement(Error500, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }\n  });\n  if (!isLoaded) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxMapa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    zoom: 8,\n    mapContainerStyle: STYLE_CONTAI,\n    center: MAPA_CENTER,\n    options: MAPA_OPTION,\n    onLoad: onMapLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null), rutas.length > 0 ? renderRutas(rutas) : null));\n};\n\nexport default React.memo(Index);","map":{"version":3,"sources":["/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/src/componets/Mapa/index.jsx"],"names":["React","GoogleMap","Marker","InfoWindow","KmlLayer","useLoadScript","STYLE_CONTAI","MAPA_OPTION","MAPA_CENTER","KEY_GOOGLE","Loading","Error500","Index","props","moviles","rutas","map","setMap","useState","markers","setMarkers","selected","setSelected","isLoaded","loadError","googleMapsApiKey","mapRef","useRef","onMapLoad","useCallback","current","panTo","lat","lng","setZoom","onUnmount","callback","renderRutas","listado","kml","obj","i","push","length","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { GoogleMap, Marker, InfoWindow, KmlLayer, useLoadScript } from '@react-google-maps/api';\nimport { STYLE_CONTAI, MAPA_OPTION, MAPA_CENTER, KEY_GOOGLE } from \"./mapConfig\";\n\nimport Loading  from '../Loading';\nimport Error500 from '../Errors/500';\n\nconst Index = (props) => {\n    const { moviles, rutas } = props;\n\n    const [map, setMap] = React.useState(null);\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState(null);\n\n    const { isLoaded, loadError } = useLoadScript({\n        // googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n        googleMapsApiKey: KEY_GOOGLE\n    });\n \n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({ lat, lng }) => {\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(14);\n    }, []);\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n \n    \n    const renderRutas = (listado) => {\n        let kml = [];\n        listado.map( (obj, i) => kml.push(<KmlLayer key={i} url={obj} />) );\n        return kml;\n    }\n\n    if (loadError) return <Error500 />;\n    if (!isLoaded) return <Loading />;\n\n    return (\n        <div className=\"boxMapa\">\n            <GoogleMap \n                zoom={8} \n                mapContainerStyle={ STYLE_CONTAI } \n                center={ MAPA_CENTER } \n                options={ MAPA_OPTION }\n                onLoad={onMapLoad}\n                onUnmount={onUnmount} \n            >\n            { /* Child components, such as markers, info windows, etc. */ }\n            <></>\n\n            { rutas.length > 0 ? renderRutas(rutas) : null }\n            </GoogleMap>\n        </div>\n    )\n}\n\nexport default React.memo(Index);"]},"metadata":{},"sourceType":"module"}