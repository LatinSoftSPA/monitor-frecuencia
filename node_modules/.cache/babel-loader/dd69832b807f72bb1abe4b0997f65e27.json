{"ast":null,"code":"var _jsxFileName = \"/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/src/componets/Mapa/index.jsx\";\nimport React from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { STYLE_CUSTOM } from \"./mapStyles\";\nconst KEY_GOOGLE = 'AIzaSyCpcjpET_egxZ-KiFlQwio0x7HLFjcphgc';\nconst containerStyle = {\n  width: '100%',\n  height: '85vh'\n};\nconst options = {\n  styles: STYLE_CUSTOM,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst center = {\n  lat: -23.645735,\n  lng: -70.390293\n};\n\nconst Index = () => {\n  const [map, setMap] = React.useState(null);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: KEY_GOOGLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 8,\n    onLoad: onMapLoad,\n    onUnmount: onUnmount,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default React.memo(Index);","map":{"version":3,"sources":["/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/src/componets/Mapa/index.jsx"],"names":["React","GoogleMap","LoadScript","STYLE_CUSTOM","KEY_GOOGLE","containerStyle","width","height","options","styles","disableDefaultUI","zoomControl","center","lat","lng","Index","map","setMap","useState","mapRef","useRef","onMapLoad","useCallback","current","panTo","setZoom","onUnmount","callback","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AAEA,SAASC,YAAT,QAA6B,aAA7B;AAEA,MAAMC,UAAU,GAAG,yCAAnB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAEN,YADI;AAEZO,EAAAA,gBAAgB,EAAE,IAFN;AAGZC,EAAAA,WAAW,EAAE;AAHD,CAAhB;AAMA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,CAAC,SADO;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBjB,KAAK,CAACkB,QAAN,CAAe,IAAf,CAAtB;AAEE,QAAMC,MAAM,GAAGnB,KAAK,CAACoB,MAAN,EAAf;AACA,QAAMC,SAAS,GAAGrB,KAAK,CAACsB,WAAN,CAAmBN,GAAD,IAAS;AACzCG,IAAAA,MAAM,CAACI,OAAP,GAAiBP,GAAjB;AACH,GAFiB,EAEf,EAFe,CAAlB;AAIA,QAAMQ,KAAK,GAAGxB,KAAK,CAACsB,WAAN,CAAkB,CAAC;AAAET,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KAAkB;AAC9CK,IAAAA,MAAM,CAACI,OAAP,CAAeC,KAAf,CAAqB;AAAEX,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAArB;AACAK,IAAAA,MAAM,CAACI,OAAP,CAAeE,OAAf,CAAuB,EAAvB;AACH,GAHa,EAGX,EAHW,CAAd;AAKA,QAAMC,SAAS,GAAG1B,KAAK,CAACsB,WAAN,CAAkB,SAASK,QAAT,CAAkBX,GAAlB,EAAuB;AACvDC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH,GAFiB,EAEf,EAFe,CAAlB;AAIA,sBACI,oBAAC,UAAD;AAAY,IAAA,gBAAgB,EAAGb,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACA,IAAA,iBAAiB,EAAEC,cADnB;AAEA,IAAA,MAAM,EAAEO,MAFR;AAGA,IAAA,IAAI,EAAE,CAHN;AAIA,IAAA,MAAM,EAAES,SAJR;AAKA,IAAA,SAAS,EAAEK,SALX;AAMA,IAAA,OAAO,EAAElB,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASA,yCATA,CADJ,CADJ;AAeH,CAhCD;;AAkCA,eAAeR,KAAK,CAAC4B,IAAN,CAAWb,KAAX,CAAf","sourcesContent":["import React from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\nimport { STYLE_CUSTOM } from \"./mapStyles\";\n\nconst KEY_GOOGLE = 'AIzaSyCpcjpET_egxZ-KiFlQwio0x7HLFjcphgc';\n\nconst containerStyle = {\n  width: '100%',\n  height: '85vh'\n};\n\nconst options = {\n    styles: STYLE_CUSTOM,\n    disableDefaultUI: true,\n    zoomControl: true,\n};\n\nconst center = {\n  lat: -23.645735,\n  lng: -70.390293\n};\n \nconst Index = () => {\n  const [map, setMap] = React.useState(null);\n \n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({ lat, lng }) => {\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(14);\n    }, []);\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n \n    return (\n        <LoadScript googleMapsApiKey={ KEY_GOOGLE }>\n            <GoogleMap \n            mapContainerStyle={containerStyle} \n            center={center} \n            zoom={8} \n            onLoad={onMapLoad}\n            onUnmount={onUnmount} \n            options={options}\n            >\n            { /* Child components, such as markers, info windows, etc. */ }\n            <></>\n            </GoogleMap>\n        </LoadScript>\n    )\n}\n\nexport default React.memo(Index);"]},"metadata":{},"sourceType":"module"}