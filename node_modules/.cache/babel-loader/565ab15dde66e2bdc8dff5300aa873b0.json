{"ast":null,"code":"var _jsxFileName = \"/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/src/componets/Mapa/index.jsx\";\nimport React from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nconst containerStyle = {\n  width: '100%',\n  height: '85vh'\n};\nconst options = {\n  zoomControlOptions: {// ...otherOptions\n  }\n};\nconst center = {\n  lat: 0,\n  lng: 0\n};\n\nconst Index = () => {\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyCpcjpET_egxZ-KiFlQwio0x7HLFjcphgc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 1,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default React.memo(Index);","map":{"version":3,"sources":["/home/mvera/Documentos/LATINSOFT/REACT JS/APP MONITORES/src/componets/Mapa/index.jsx"],"names":["React","GoogleMap","LoadScript","containerStyle","width","height","options","zoomControlOptions","center","lat","lng","Index","map","setMap","useState","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,OAAO,GAAG;AACZC,EAAAA,kBAAkB,EAAE,CAChB;AADgB;AADR,CAAhB;AAMA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,CADQ;AAEbC,EAAAA,GAAG,EAAE;AAFQ,CAAf;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,KAAK,CAACc,QAAN,CAAe,IAAf,CAAtB;AAEA,QAAMC,MAAM,GAAGf,KAAK,CAACgB,WAAN,CAAkB,SAASC,QAAT,CAAkBL,GAAlB,EAAuB;AACtD,UAAMM,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAV,IAAAA,GAAG,CAACW,SAAJ,CAAcL,MAAd;AACAL,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,QAAMY,SAAS,GAAGxB,KAAK,CAACgB,WAAN,CAAkB,SAASC,QAAT,CAAkBL,GAAlB,EAAuB;AACzDC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,sBACE,oBAAC,UAAD;AAAY,IAAA,gBAAgB,EAAC,yCAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,iBAAiB,EAAEV,cADrB;AAEE,IAAA,MAAM,EAAEK,MAFV;AAGE,IAAA,IAAI,EAAE,CAHR;AAIE,IAAA,MAAM,EAAEO,MAJV;AAKE,IAAA,SAAS,EAAES,SALb;AAME,IAAA,OAAO,EAAElB,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,yCATF,CADF,CADF;AAeD,CA5BD;;AA8BA,eAAeN,KAAK,CAACyB,IAAN,CAAWd,KAAX,CAAf","sourcesContent":["import React from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n \nconst containerStyle = {\n  width: '100%',\n  height: '85vh'\n};\n\nconst options = {\n    zoomControlOptions: {\n        // ...otherOptions\n    }\n}\n\nconst center = {\n  lat: 0,\n  lng: 0\n};\n \nconst Index = () => {\n  const [map, setMap] = React.useState(null);\n \n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n \n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n \n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyCpcjpET_egxZ-KiFlQwio0x7HLFjcphgc\">\n      <GoogleMap \n        mapContainerStyle={containerStyle} \n        center={center} \n        zoom={1} \n        onLoad={onLoad} \n        onUnmount={onUnmount} \n        options={options}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n    </LoadScript>\n  )\n}\n\nexport default React.memo(Index);"]},"metadata":{},"sourceType":"module"}